require("dotenv").config();
const app = require("./events");
require("./sip");
const { mqttClient } = require("./mqtt");

const PORT = 3000;

// üöÄ Inicia o servidor HTTP
app.listen(PORT, () => {
  console.log(`üì° Hikvision Event Listener running on http://localhost:${PORT}`);
});

// ‚úÖ Captura erros globais ‚Äî garante rein√≠cio autom√°tico pelo Docker
process.on("uncaughtException", (err) => {
  console.error("üí• Uncaught Exception:", err);
  process.exit(1);
});

process.on("unhandledRejection", (reason, promise) => {
  console.error("üí• Unhandled Promise Rejection:", reason);
  process.exit(1);
});

// ‚úÖ Monitora MQTT ‚Äî se perder conex√£o permanentemente, reinicia
mqttClient.on("error", (err) => {
  console.error("‚ùå MQTT error:", err.message);
  process.exit(1);
});

mqttClient.on("offline", () => {
  console.error("‚ö†Ô∏è MQTT client offline ‚Äî restarting...");
  process.exit(1);
});

mqttClient.on("close", () => {
  console.error("‚ö†Ô∏è MQTT connection closed ‚Äî restarting...");
  process.exit(1);
});
